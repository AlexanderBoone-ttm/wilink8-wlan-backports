diff --git a/drivers/net/ethernet/intel/igb/igb_main.c b/drivers/net/ethernet/intel/igb/igb_main.c
index 35ac7d8..e609f71 100644
--- a/drivers/net/ethernet/intel/igb/igb_main.c
+++ b/drivers/net/ethernet/intel/igb/igb_main.c
@@ -182,8 +182,10 @@ static int igb_ndo_set_vf_mac(struct net
 static int igb_ndo_set_vf_vlan(struct net_device *netdev,
 			       int vf, u16 vlan, u8 qos);
 static int igb_ndo_set_vf_bw(struct net_device *netdev, int vf, int tx_rate);
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,2,0)
 static int igb_ndo_set_vf_spoofchk(struct net_device *netdev, int vf,
 				   bool setting);
+#endif /* LINUX_VERSION_CODE >= KERNEL_VERSION(3,2,0) */
 static int igb_ndo_get_vf_config(struct net_device *netdev, int vf,
 				 struct ifla_vf_info *ivi);
 static void igb_check_vf_rate_limit(struct igb_adapter *);
@@ -2063,7 +2065,9 @@ static const struct net_device_ops igb_n
 	.ndo_set_vf_mac		= igb_ndo_set_vf_mac,
 	.ndo_set_vf_vlan	= igb_ndo_set_vf_vlan,
 	.ndo_set_vf_tx_rate	= igb_ndo_set_vf_bw,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,2,0)
 	.ndo_set_vf_spoofchk	= igb_ndo_set_vf_spoofchk,
+#endif /* LINUX_VERSION_CODE >= KERNEL_VERSION(3,2,0) */
 	.ndo_get_vf_config	= igb_ndo_get_vf_config,
 #ifdef CONFIG_NET_POLL_CONTROLLER
 	.ndo_poll_controller	= igb_netpoll,
@@ -7877,6 +7881,7 @@ static int igb_ndo_set_vf_bw(struct net_
 	return 0;
 }
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,2,0)
 static int igb_ndo_set_vf_spoofchk(struct net_device *netdev, int vf,
 				   bool setting)
 {
@@ -7903,6 +7908,7 @@ static int igb_ndo_set_vf_spoofchk(struc
 	adapter->vf_data[vf].spoofchk_enabled = setting;
 	return E1000_SUCCESS;
 }
+#endif /* LINUX_VERSION_CODE >= KERNEL_VERSION(3,2,0) */
 
 static int igb_ndo_get_vf_config(struct net_device *netdev,
 				 int vf, struct ifla_vf_info *ivi)
@@ -7915,7 +7921,9 @@ static int igb_ndo_get_vf_config(struct
 	ivi->tx_rate = adapter->vf_data[vf].tx_rate;
 	ivi->vlan = adapter->vf_data[vf].pf_vlan;
 	ivi->qos = adapter->vf_data[vf].pf_qos;
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,2,0)
 	ivi->spoofchk = adapter->vf_data[vf].spoofchk_enabled;
+#endif /* LINUX_VERSION_CODE >= KERNEL_VERSION(3,2,0) */
 	return 0;
 }
 
